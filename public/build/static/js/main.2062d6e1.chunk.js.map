{"version":3,"sources":["components/Toolbar/Toolbar.module.css","components/PanelQueues/PanelQueues.module.css","helpers/Provider/index.js","store/selectors/auth.js","routeHandlers/PrivateRoute.js","helpers/constants.js","reducer/auth.js","store/helpers.js","reducer/sip.js","reducer/queue.js","reducer/channels.js","reducer/user.js","reducer/index.js","helpers/common.js","AC/channels.js","AC/sip.js","AC/queue.js","middlewares/socketMiddleware.js","store/index.js","middlewares/api.js","store/selectors/_helper.js","store/selectors/queue.js","components/Header/index.js","AC/auth.js","components/Content/index.js","components/Login/index.js","store/selectors/sip.js","store/selectors/channels.js","components/DurationTimer/DurationTimer.js","components/SipPeerChannels/index.js","components/SipPeer/index.js","components/PanelTrunk/index.js","components/PanelSip/index.js","components/Toolbar/index.js","components/SipToolbar/index.js","components/Dashboard/index.js","components/QueueEntry/QueueEntries.js","components/QueueEntry/QueueEntryContainer.js","components/Queue/QueueMembers.js","components/Queue/QueueMembersContainer.js","components/Queue/QueueComponent.js","components/PanelQueues/index.js","store/selectors/user.js","components/PanelUsers/index.js","AC/user.js","components/User/index.js","routeHandlers/NotFoundPage.js","routes.js","addFontAwesome.js","serviceWorker.js","index.js","components/QueueEntry/QueueEntriy.module.css","components/Queue/QueueComponent.module.css","components/PanelUsers/PanelUsers.module.css","components/User/User.module.css"],"names":["module","exports","container","content","Providers","_ref","store","children","react_default","a","createElement","es","getAuthSipState","state","getIn","getAuthIsLoggedInState","getAuthIsLoadingInState","getAuthIsErrorState","getAuthErrorCodeState","getAuthErrorMessageState","connect","isLoggedIn","Component","component","rest","Object","objectWithoutProperties","react_router","assign","render","props","to","pathname","from","location","API_URL","START","SUCCESS","FAIL","RESET_ERROR","AUTH_USER","LOG_OUT","LOAD_USERS","LOAD_USER","POST_USER","PATCH_USER","DELETE_USER","LOAD_ALL_SIPS","CHANGE_SIP_STATUS","SIP_SELECT","SIP_FILTER","SIP_FILTER_ONLINE","SIP_FILTER_ALL","SIP_SPY","BRIDGE_STOP","LOAD_ALL_CHANNELS","NEW_CHANNEL","REMOVE_CHANNEL","LOAD_ALL_QUEUES","QUEUE_JOIN","QUEUE_LEAVE","QUEUE_MEMBER_STATUS","SIP_STATUS_IN_USE","SIP_STATUS_RINGING","CHANNEL_STATUS_OUT_RINGING","CHANNEL_STATUS_UP","localStorageToken","localStorage","getItem","localStorageSip","defaultState","Map","isError","token","sip","isLoading","expires","errorMessage","errorCode","arrayToMap","arr","mapper","arguments","length","undefined","f","reduce","acc","entity","set","id","SipModel","Record","login","online","isTrunk","status","SipSimpleModel","entities","OrderedMap","entitiesSimple","isLoaded","selectedSip","filter","sipSpy","message","QueueParamsModel","queue","max","strategy","calls","holdtime","talktime","completed","abandoned","servicelevel","servicelevelperf","weight","QueueMemberModel","penalty","callstaken","lastcall","paused","QueueEntryModel","position","channel","calleridnum","calleridname","connectedlinenum","connectedlinename","wait","date","uniqueid","ChannelModel","duration","UserModel","_id","firstName","lastName","role","username","errorField","submitSuccess","shouldRedirect","combineReducers","auth","action","type","response","withMutations","s","user","payload","update","merge","setIn","reason","i","queues","keys","accMain","key","el","params","members","entries","entry","updateIn","item","map","keyValue","deleteIn","data","channels","objectSpread","delete","idKey","arrayToMapCustomKey","fromJS","defineProperty","field","removeIn","paramsForAPI","concat","join","loadChannels","callAPI","needAuth","loadSipPeers","selectSip","getQueues","socket","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","next","methodAPI","options","method","headers","Accept","Content-Type","body","axios","defaults","common","getState","url","then","catch","error","removeItem","emit","enhancer","applyMiddleware","apply","toConsumableArray","initialState","createStore","reducer","wsPort","port","protocol","hostname","io","query","split","on","code","dispatch","changeSipStatus","changeQueueMemberStatus","queueJoin","_ref2","queueLeave","startWS","createImmutableEqualSelector","createSelectorCreator","defaultMemoize","is","getQueuesIsLoadedState","getQueuesIsLoadingState","getQueuesKeysState","getFilteredMembers","getFilteredMembersState","sort","b","getFilteredMembersLengthState","size","getDetail","getDetailState","getQueueEntries","queueId","getQueueEntriesState","getQueueSipPeer","memberOfQueue","getQueueSipPeerState","Header","isOpen","toggle","_this","setState","_this$props","this","isLoadingQueues","isLoadedQueues","_this$props2","logOutUser","isQueuesExist","Navbar","color","dark","expand","NavbarBrand","tag","RRNavLink","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","href","PureComponent","withRouter","Content","react_toastify_lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","components_Header","Login","password","handleChangeInput","ev","target","getAttribute","value","handleSubmitForm","preventDefault","locationState","_this$state","loginUser","history","push","prevProps","prevState","prevContext","onSubmit","htmlFor","name","placeholder","required","autoFocus","onChange","aria-label","disabled","path","setItem","getSipIsLoadedState","getSipIsLoadingState","getSipSelectedSipState","getSipSpyIsErrorState","getSipSpyStatusState","getSipSpyMessageState","getSipFilter","getSipFilterState","getSipPeer","getSipPeerState","filters","_filters","getFilteredSips","getFilteredSipsState","getFilteredTrunksState","getChannelsState","get","getChannelsBySip","sipPeer","getChannelsBySipState","enchance","withState","startDate","Date","currentDate","now","parseInt","withHandlers","handleStartInterval","intervalId","setInterval","setDuration","setIntervalId","handleStopInterval","clearInterval","lifecycle","componentDidMount","isTicking","componentDidUpdate","componentWillUnmount","durationHuman","sec","secNum","hours","Math","floor","minutes","seconds","secToHuman","SipPeerChannel","statusIcon","index_es","icon","title","DurationTimer_DurationTimer","SipPeerChannels","memo","sipChannels","entrySeq","_ref3","slicedToArray","SipPeerChannels_SipPeerChannel","CardBody","statusStyle","SIP_STATUS_IDLE","SIP_STATUS_BUSY","SIP_STATUS_UNAVAILABLE","SIP_STATUS_ON_HOLD","SipPeer","handleSelectSip","_isSipUp","find","obj","_isSipRinging","sipPeerDetail","isSelected","SipUp","SipRinging","peerStatusClass","additionalClass","Card","CardHeader","components_SipPeerChannels","getSipChannels","PanelTrunk","peers","Col","md","style","marginBottom","components_SipPeer","CardTitle","Badge","Row","PanelSip","renderItems","Fragment","Toolbar","isFluid","styles","Container","fluid","ButtonGroup","SipToolbar","handleToggleOnline","filterSip","handleSpy","spySip","authSIP","handleSpyAndWhisper","_this$props3","sipSpyIsError","toast","sipSpyMessage","spySipResetError","sipSpyStatus","info","_this$props4","queueEntity","isHideFilter","filterStateText","components_Toolbar","Button","outline","recipient","whisper","Dashboard","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","components_SipToolbar","components_PanelSip","components_PanelTrunk","QueueEntry","queueEntry","QueueEntries","queueEntries","QueueEntryContainer","nextProps","nextState","nextContext","equals","QueueEntry_QueueEntries","getEntries","queueMembers","queueName","enhance","getMembers","queueDetail","QueueMembers","isEmpty","getMembersLength","QueueMembersContainer","entries__divider","QueueEntry_QueueEntryContainer","PanelQueues","isLoadedSip","isLoadingSip","queuesComponent","Queue_QueueComponent","getUserIsLoadedState","getUserIsLoadingState","getUserIsErrorState","getUserIsErrorMsgState","getUserErrorFieldState","getUserIsSubmittedState","getUsersState","getUserState","userId","PanelUsers","_handleDeleteUser","confirm","deleteUser","getUsers","react_router_dom","_this2","usersComponent","_renderTableItem","toolbar__link","Table","bordered","hover","striped","responsive","_renderTableHeader","User","isSubmitSuccess","isNew","patchUser","postUser","match","getUser","success","label","_ref$type","_ref$isInvalid","isInvalid","attributes","FormGroup","row","Label","for","Input","invalid","FormFeedback","Breadcrumb","BreadcrumbItem","active","Form","User_FormItem","handleOnChange","spin","FormItem","_ref2$type","_ref2$isInvalid","Options","NotFoundPage","routes","Provider","exact","components_Content","routeHandlers_PrivateRoute","library","add","faCircleNotch","faUserSecret","faMicrophone","faPhoneVolume","faPhone","Boolean","rootEl","document","getElementById","ReactDOM","navigator","serviceWorker","ready","registration","unregister","entries--empty","bread-crumbs"],"mappings":"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","file":"static/js/main.2062d6e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Toolbar_container__1vRtq\",\"content\":\"Toolbar_content__1N6lN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PanelQueues_content__3H2_4\"};","import { Provider as ReduxProvider } from 'react-redux';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Providers = ({ store, children }) => <ReduxProvider store={store}>{children}</ReduxProvider>;\r\n\r\nProviders.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Providers;\r\n","// import { createImmutableEqualSelector } from './_helper';\r\n\r\nexport const getAuthSipState = state => state.getIn(['auth', 'sip']);\r\n\r\nexport const getAuthIsLoggedInState = state => state.getIn(['auth', 'isLoggedIn']);\r\n\r\nexport const getAuthIsLoadingInState = state => state.getIn(['auth', 'isLoading']);\r\n\r\nexport const getAuthIsErrorState = state => state.getIn(['auth', 'isError']);\r\n\r\nexport const getAuthErrorCodeState = state => state.getIn(['auth', 'errorCode']);\r\n\r\nexport const getAuthErrorMessageState = state => state.getIn(['auth', 'errorMessage']);\r\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAuthIsLoggedInState } from '../store/selectors/auth';\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  const { isLoggedIn } = rest;\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: getAuthIsLoggedInState(state)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(PrivateRoute);\n","export const API_URL = '/api';\n\nexport const START = '_START';\nexport const SUCCESS = '_SUCCESS';\nexport const FAIL = '_FAIL';\n\nexport const RESET_ERROR = '_RESET_ERROR';\n\n// AUTH\nexport const AUTH_USER = 'AUTH_USER';\nexport const UNAUTH_USER = 'UNAUTH_USER';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const PROTECTED_TEST = 'PROTECTED_TEST';\nexport const LOG_OUT = 'LOG_OUT';\n// USERS\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const LOAD_USER = 'LOAD_USER';\nexport const POST_USER = 'POST_USER';\nexport const ADD_USER = 'ADD_USER';\nexport const PATCH_USER = 'PATCH_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const REDIRECT_COMPLETE = 'REDIRECT_COMPLETE';\n\n// SIP\nexport const LOAD_ALL_SIPS = 'LOAD_ALL_SIPS';\nexport const SIP_CHANGE_STATE = 'SIP_CHANGE_STATE';\nexport const CHANGE_SIP_STATUS = 'CHANGE_SIP_STATUS';\nexport const SIP_SELECT = 'SIP_SELECT';\nexport const SIP_FILTER = 'SIP_FILTER';\nexport const SIP_FILTER_ONLINE = 'SIP_FILTER_ONLINE';\nexport const SIP_FILTER_ALL = 'SIP_FILTER_ALL';\n// SIP SPY\nexport const SIP_SPY = 'SIP_SPY';\nexport const SIP_SPY_WHISPER = 'SIP_SPY_WHISPER';\n\n// CHANNELS\nexport const BRIDGE_START = 'BRIDGE_START';\nexport const BRIDGE_STOP = 'BRIDGE_STOP';\nexport const LOAD_ALL_CHANNELS = 'LOAD_ALL_CHANNELS';\nexport const NEW_CHANNEL = 'NEW_CHANNEL';\nexport const REMOVE_CHANNEL = 'REMOVE_CHANNEL';\n// QUEUE\nexport const LOAD_ALL_QUEUES = 'LOAD_ALL_QUEUES';\nexport const QUEUE_JOIN = 'QUEUE_JOIN';\nexport const QUEUE_LEAVE = 'QUEUE_LEAVE';\nexport const QUEUE_MEMBER_STATUS = 'QUEUE_MEMBER_STATUS';\n\n// Asterisk statuses\nexport const SIP_STATUS_IDLE = 'SIP_STATUS_IDLE';\nexport const SIP_STATUS_IN_USE = 'SIP_STATUS_IN_USE';\nexport const SIP_STATUS_BUSY = 'SIP_STATUS_BUSY';\nexport const SIP_STATUS_UNAVAILABLE = 'SIP_STATUS_UNAVAILABLE';\nexport const SIP_STATUS_RINGING = 'SIP_STATUS_RINGING';\nexport const SIP_STATUS_ON_HOLD = 'SIP_STATUS_ON_HOLD';\n\nexport const CHANNEL_STATUS_DOWN_AVAILABLE = 'CHANNEL_STATUS_DOWN_AVAILABLE';\nexport const CHANNEL_STATUS_DOWN_RESERVED = 'CHANNEL_STATUS_DOWN_RESERVED';\nexport const CHANNEL_STATUS_OFF_HOOK = 'CHANNEL_STATUS_OFF_HOOK';\nexport const CHANNEL_STATUS_DIGITS_DIALED = 'CHANNEL_STATUS_DIGITS_DIALED';\nexport const CHANNEL_STATUS_OUT_RINGING = 'CHANNEL_STATUS_OUT_RINGING';\nexport const CHANNEL_STATUS_IN_RINGING = 'CHANNEL_STATUS_IN_RINGING';\nexport const CHANNEL_STATUS_UP = 'CHANNEL_STATUS_UP';\nexport const CHANNEL_STATUS_BUSY = 'CHANNEL_STATUS_BUSY';\n","import { Map } from 'immutable';\nimport { AUTH_USER, SUCCESS, START, FAIL, LOG_OUT } from '../helpers/constants';\n\nconst localStorageToken = localStorage.getItem('token');\nconst localStorageSip = localStorage.getItem('sip');\n\nconst defaultState = new Map({\n  isError: false,\n  token: localStorageToken,\n  sip: localStorageSip,\n  isLoading: false,\n  isLoggedIn: !!localStorageToken,\n  expires: 0,\n  errorMessage: '',\n  errorCode: 100,\n\n  from: '/'\n});\n\nexport default function(state = defaultState, action) {\n  const { type, response } = action;\n\n  switch (type) {\n    case AUTH_USER + SUCCESS:\n      return state.withMutations(s =>\n        s\n          .set('token', response.token)\n          .set('sip', response.user.sip)\n          .set('isLoggedIn', true)\n          .set('isError', false)\n          .set('isLoading', false)\n      );\n\n    case AUTH_USER + START:\n      return state.withMutations(s =>\n        s\n          .set('isError', false)\n          .set('isLoggedIn', false)\n          .set('expires', 0)\n          .set('isLoading', true)\n      );\n\n    case AUTH_USER + FAIL:\n      return state.withMutations(s =>\n        s\n          .set('isLoggedIn', false)\n          .set('isError', true)\n          .set('expires', 0)\n          .set('errorCode', response.errorCode)\n          .set('errorMessage', response.errorMessage)\n          .set('isLoading', false)\n      );\n\n    case LOG_OUT:\n      return state.withMutations(s =>\n        s\n          .set('isLoggedIn', false)\n          .set('isError', false)\n          .set('token', '')\n          .set('sip', '')\n          .set('expires', 0)\n          .set('isLoading', false)\n      );\n\n    default:\n      return state;\n  }\n}\n","import { Map } from 'immutable';\n\nexport function arrayToMap(arr, mapper = f => f) {\n  return arr.reduce((acc, entity) => acc.set(entity.id, mapper(entity)), new Map({}));\n}\n\nexport function arrayToMapCustomKey(arr, mapper = f => f, idKey) {\n  return arr.reduce((acc, entity) => {\n    const key = typeof idKey === 'function' ? idKey(entity) : entity[idKey];\n\n    return acc.set(key, mapper(entity));\n  }, new Map({}));\n}\n\nexport function arrayToMapQueues(arr, mapper = f => f) {\n  return arr.reduce((acc, entity) => acc.set(entity.id, mapper(entity)), new Map({}));\n}\n","import {\n  CHANGE_SIP_STATUS,\n  LOAD_ALL_SIPS,\n  START,\n  SUCCESS,\n  FAIL,\n  SIP_SPY,\n  // SIP_SPY_WHISPER,\n  SIP_STATUS_UNAVAILABLE,\n  SIP_SELECT,\n  SIP_FILTER,\n  SIP_FILTER_ONLINE,\n  RESET_ERROR\n} from '../helpers/constants';\n\nimport { Record, Map, OrderedMap } from 'immutable';\nimport { arrayToMap } from '../store/helpers';\n\nconst SipModel = Record({\n  login: 'Default',\n  sip: 0,\n  online: false,\n  isTrunk: false,\n  status: SIP_STATUS_UNAVAILABLE\n});\n\nconst SipSimpleModel = Record({\n  sip: 0,\n  online: false,\n  isTrunk: false\n});\n\nconst defaultState = new Map({\n  entities: new OrderedMap({}),\n  entitiesSimple: new OrderedMap({}),\n  isLoading: false,\n  isLoaded: false,\n  selectedSip: '',\n  filter: SIP_FILTER_ONLINE,\n\n  sipSpy: new Map({\n    isError: false,\n    status: '',\n    message: ''\n  })\n});\n\nexport default (state = defaultState, action) => {\n  const { type, payload, response } = action;\n\n  switch (type) {\n    case LOAD_ALL_SIPS + START:\n      return state.set('isLoading', true);\n\n    case LOAD_ALL_SIPS + SUCCESS:\n      return state.withMutations(s =>\n        s\n          .update('entities', entities =>\n            entities.merge(arrayToMap(response, sip => new SipModel(sip)))\n          )\n          .update('entitiesSimple', entitiesSimple =>\n            entitiesSimple.merge(arrayToMap(response, sip => new SipSimpleModel(sip)))\n          )\n          .set('isLoading', false)\n          .set('isLoaded', true)\n      );\n\n    case LOAD_ALL_SIPS + FAIL:\n      return state;\n\n    case CHANGE_SIP_STATUS:\n      return state.withMutations(s =>\n        s\n          .setIn(['entities', payload.sip, 'status'], payload.status)\n          .setIn(['entities', payload.sip, 'online'], payload.online)\n          .setIn(['entitiesSimple', payload.sip, 'online'], payload.online)\n      );\n\n    case SIP_SELECT:\n      return state.set('selectedSip', payload.sip);\n\n    case SIP_FILTER:\n      return state.set('filter', payload.filter);\n\n    case SIP_SPY + START:\n      return state;\n    case SIP_SPY + SUCCESS:\n      return state.withMutations(s =>\n        s\n          .setIn(['sipSpy', 'isError'], response.status === 'Failure')\n          .setIn(['sipSpy', 'message'], response.reason)\n          .setIn(['sipSpy', 'status'], response.status)\n      );\n    case SIP_SPY + FAIL:\n      return state.withMutations(s =>\n        s\n          .setIn(['sipSpy', 'isError'], true)\n          .setIn(['sipSpy', 'message'], response.errorMessage || 'An error occurred in the API.')\n      );\n\n    case SIP_SPY + RESET_ERROR:\n      return state.withMutations(s =>\n        s.setIn(['sipSpy', 'isError'], false).setIn(['sipSpy', 'message'], '')\n      );\n\n    default:\n      return state;\n  }\n};\n","import {\n  FAIL,\n  LOAD_ALL_QUEUES,\n  QUEUE_JOIN,\n  QUEUE_LEAVE,\n  QUEUE_MEMBER_STATUS,\n  START,\n  SUCCESS\n} from '../helpers/constants';\n\nimport { Map, Record, OrderedMap } from 'immutable';\n\nconst QueueParamsModel = Record({\n  queue: '',\n  max: '0',\n  strategy: 'ringall',\n  calls: '1',\n  holdtime: '109',\n  talktime: '97',\n  completed: '116',\n  abandoned: '42',\n  servicelevel: '60',\n  servicelevelperf: '52.6',\n  weight: '0'\n});\n\nconst QueueMemberModel = Record({\n  queue: '',\n  login: '',\n  sip: '',\n  location: 'Local/143@from-queue/n',\n  penalty: '0',\n  callstaken: '5',\n  lastcall: '1536960877',\n  status: '',\n  paused: '0',\n  online: false\n});\n\nconst QueueEntryModel = Record({\n  queue: 'Default',\n  position: 0,\n  channel: false,\n  calleridnum: '',\n  calleridname: '',\n  connectedlinenum: '',\n  connectedlinename: '',\n  wait: '0',\n  date: 0,\n  uniqueid: ''\n});\n\nconst defaultState = new Map({\n  entities: new Map({}),\n  isLoading: false,\n  isLoaded: false,\n  // selectedSip: '',\n  // filter: SIP_FILTER_ALL,\n\n  sipSpy: new Map({\n    isError: false,\n    status: '',\n    message: ''\n  })\n});\n\nexport default (state = defaultState, action) => {\n  const { type, payload, response } = action;\n  let i = 0;\n\n  switch (type) {\n    case LOAD_ALL_QUEUES + START:\n      return state.set('isLoading', true).set('isLoaded', false);\n\n    case LOAD_ALL_QUEUES + SUCCESS:\n      return state\n        .update('entities', entities => entities.merge(arrayToMapQueues(response)))\n        .set('isLoading', false)\n        .set('isLoaded', true);\n\n    case LOAD_ALL_QUEUES + FAIL:\n      return state.set('isLoading', false).set('isLoaded', false);\n\n    case QUEUE_JOIN:\n      return state.withMutations(s =>\n        s\n          .setIn(\n            ['entities', payload.entry.queue, 'entries', payload.entry.uniqueid],\n            new QueueEntryModel(payload.entry)\n          )\n          .updateIn(['entities', payload.entry.queue, 'entries'], item =>\n            item.map(keyValue => keyValue.set('position', ++i))\n          )\n      );\n\n    case QUEUE_LEAVE:\n      return state.withMutations(s =>\n        s\n          .deleteIn(['entities', payload.entry.queue, 'entries', payload.entry.uniqueid])\n          .updateIn(\n            ['entities', payload.entry.queue, 'entries'],\n            item => (item ? item.map(keyValue => keyValue.set('position', ++i)) : [])\n          )\n      );\n\n    case QUEUE_MEMBER_STATUS:\n      return state.setIn(\n        ['entities', payload.data.queue, 'members', payload.data.sip],\n        new QueueMemberModel(payload.data)\n      );\n\n    default:\n      return state;\n  }\n};\n\nfunction arrayToMapQueues(queues) {\n  let keys = Object.keys(queues);\n  let res = keys.reduce((accMain, key) => {\n    const el = queues[key];\n\n    return accMain.set(\n      key,\n      new Map({\n        params: new QueueParamsModel(el.params),\n        members: el.members.reduce(\n          (acc, entity) => acc.set(entity.sip, new QueueMemberModel(entity)),\n          new OrderedMap({})\n        ),\n        entries: el.entries.reduce(\n          (acc, entity) => acc.set(entity.uniqueid, new QueueEntryModel(entity)),\n          new OrderedMap({})\n        )\n      })\n    );\n  }, new Map({}));\n\n  return res;\n}\n","import {\n  LOAD_ALL_CHANNELS,\n  START,\n  SUCCESS,\n  FAIL,\n  NEW_CHANNEL,\n  REMOVE_CHANNEL\n} from '../helpers/constants';\nimport { Record, Map } from 'immutable';\nimport { arrayToMap } from '../store/helpers';\n\nconst ChannelModel = Record({\n  sip: 0,\n  connectedlinenum: 0,\n  id: '',\n  duration: 0,\n  date: 0,\n  status: 0,\n  channel: ''\n});\n\nconst defaultState = new Map({});\n\nexport default (state = defaultState, action) => {\n  const { type, payload, response } = action;\n\n  switch (type) {\n    case LOAD_ALL_CHANNELS + START:\n      return state;\n\n    case LOAD_ALL_CHANNELS + SUCCESS:\n      return state.merge(arrayToMap(response, channel => new ChannelModel(channel)));\n\n    case LOAD_ALL_CHANNELS + FAIL:\n      return state;\n\n    case NEW_CHANNEL:\n      return state.setIn(\n        [payload.channel.channel.id],\n        new ChannelModel({ ...payload.channel.channel })\n      );\n\n    case REMOVE_CHANNEL:\n      return state.delete(payload.id);\n\n    default:\n      return state;\n  }\n};\n","import { Record, Map, fromJS } from 'immutable';\nimport {\n  LOAD_USERS,\n  POST_USER,\n  PATCH_USER,\n  SUCCESS,\n  START,\n  FAIL,\n  DELETE_USER,\n  LOAD_USER\n} from '../helpers/constants';\nimport { arrayToMapCustomKey } from '../store/helpers';\n\nconst UserModel = Record({\n  _id: '',\n  firstName: '',\n  lastName: '',\n  role: 'Client',\n  username: '',\n  sip: '',\n\n  isLoading: false\n});\n\nconst defaultState = new Map({\n  entities: new Map({}),\n  errorMessage: '',\n  errorField: '',\n  isError: false,\n  isLoading: false,\n  isLoaded: false,\n  submitSuccess: false,\n  shouldRedirect: ''\n});\n\nexport default (state = defaultState, action) => {\n  const { type, payload, response } = action;\n\n  switch (type) {\n    case LOAD_USERS + START:\n      return state.set('isLoading', true);\n\n    case LOAD_USERS + SUCCESS:\n      return state.withMutations(s =>\n        s\n          .update('entities', entities =>\n            entities.merge(arrayToMapCustomKey(response, user => new UserModel(user), 'username'))\n          )\n          .set('isLoading', false)\n          .set('isLoaded', true)\n      );\n\n    case LOAD_USERS + FAIL:\n      return state.withMutations(s =>\n        s\n          .set('isLoading', false)\n          .set('isLoaded', false)\n          .set('isError', true)\n          .set('errorMessage', response.errorMessage)\n      );\n\n    case LOAD_USER + START:\n      return state.set('isLoading', true);\n\n    case LOAD_USER + SUCCESS:\n      return state.withMutations(s =>\n        s\n          .update('entities', entities =>\n            entities.merge(fromJS({ [response.username]: new UserModel(response) }))\n          )\n          .set('isLoading', false)\n          .set('isLoaded', true)\n      );\n\n    case LOAD_USER + FAIL:\n      return state.withMutations(s =>\n        s\n          .set('isLoading', false)\n          .set('isLoaded', false)\n          .set('isError', true)\n          .set('errorMessage', response.errorMessage)\n      );\n\n    case POST_USER + START:\n      return state\n        .set('submitSuccess', false)\n        .set('isError', false)\n        .set('errorMessage', '')\n        .set('errorField', '');\n\n    case POST_USER + SUCCESS:\n      return state.withMutations(s =>\n        s\n          .setIn(['entities', payload.username], new UserModel(response))\n          .set('isLoading', false)\n          .set('isLoaded', true)\n          .set('isError', false)\n          .set('errorMessage', '')\n          .set('errorField', '')\n          .set('submitSuccess', true)\n      );\n\n    case POST_USER + FAIL:\n      return state\n        .set('isLoading', false)\n        .set('isLoaded', false)\n        .set('isError', true)\n        .set('errorMessage', response.errorMessage)\n        .set('errorField', response.field)\n        .set('submitSuccess', false);\n\n    case DELETE_USER + START:\n      return state.set('submitSuccess', false);\n\n    case DELETE_USER + SUCCESS:\n      return state.withMutations(s =>\n        s\n          .removeIn(['entities', payload.username], new UserModel(response))\n          .set('submitSuccess', true)\n      );\n\n    case DELETE_USER + FAIL:\n      return state.withMutations(s =>\n        s\n          .set('isLoading', false)\n          .set('isLoaded', false)\n          .set('isError', true)\n          .set('errorMessage', response.errorMessage)\n          .set('errorField', response.field)\n          .set('submitSuccess', false)\n      );\n\n    case PATCH_USER + START:\n      return state.withMutations(s =>\n        s\n          .setIn(['entities', payload.username, 'isLoading'], true)\n          .set('isError', false)\n          .set('errorMessage', '')\n          .set('errorField', '')\n          .set('submitSuccess', false)\n      );\n\n    case PATCH_USER + SUCCESS:\n      return state.withMutations(s =>\n        s\n          .setIn(['entities', payload.username, 'isLoading'], false)\n          .setIn(['entities', payload.username], new UserModel(response))\n          .set('submitSuccess', true)\n      );\n\n    case PATCH_USER + FAIL:\n      return state.withMutations(s =>\n        s\n          .setIn(['entities', payload.username, 'isLoading'], false)\n          .set('isError', true)\n          .set('errorMessage', response.errorMessage)\n          .set('errorField', response.field)\n          .set('submitSuccess', false)\n      );\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux-immutable';\n\nimport auth from './auth';\nimport sip from './sip';\nimport queue from './queue';\nimport channels from './channels';\nimport user from './user';\n\nexport default combineReducers({\n  auth,\n  sip,\n  queue,\n  channels,\n  user\n});\n","export function secToHuman(sec) {\n  if (!sec) {\n    return '00:00:00';\n  }\n\n  const secNum = parseInt(sec, 10);\n  let hours = Math.floor(secNum / 3600);\n  let minutes = Math.floor((secNum - hours * 3600) / 60);\n  let seconds = secNum - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n\n  return `${hours}:${minutes}:${seconds}`;\n}\n\nexport function paramsForAPI(params) {\n  return Object.keys(params)\n    .map(el => `${el}=${params[el]}`)\n    .join('&');\n}\n","import {\n  API_URL,\n  // BRIDGE_START,\n  // BRIDGE_STOP,\n  LOAD_ALL_CHANNELS,\n  // START,\n  // SUCCESS,\n  // FAIL,\n  NEW_CHANNEL,\n  REMOVE_CHANNEL\n} from '../helpers/constants';\n\nexport function loadChannels() {\n  return {\n    type: LOAD_ALL_CHANNELS,\n    callAPI: `${API_URL}/channels`,\n    needAuth: true\n  };\n}\n\nexport function newChannel(channel) {\n  return {\n    type: NEW_CHANNEL,\n    payload: { channel },\n    needAuth: true\n  };\n}\n\nexport function removeChannel(id) {\n  return {\n    type: REMOVE_CHANNEL,\n    payload: { id },\n    needAuth: true\n  };\n}\n","import {\n  API_URL,\n  SIP_SELECT,\n  LOAD_ALL_SIPS,\n  CHANGE_SIP_STATUS,\n  SIP_FILTER,\n  SIP_SPY,\n  RESET_ERROR\n} from '../helpers/constants';\n\nexport function loadSipPeers() {\n  return {\n    type: LOAD_ALL_SIPS,\n    callAPI: `${API_URL}/sip`,\n    needAuth: true\n  };\n}\n\nexport function changeSipStatus({ sip, status, online }) {\n  return {\n    type: CHANGE_SIP_STATUS,\n    payload: {\n      sip,\n      status,\n      online\n    },\n    needAuth: true\n  };\n}\n\nexport function selectSip(sip) {\n  return {\n    type: SIP_SELECT,\n    payload: {\n      sip\n    }\n  };\n}\n\nexport function filterSip(filter) {\n  return {\n    type: SIP_FILTER,\n    payload: {\n      filter\n    },\n    needAuth: true\n  };\n}\n\nexport function spySip(recipient, sip, whisper) {\n  return {\n    type: SIP_SPY,\n    payload: { recipient, sip, whisper },\n    params: { whisper },\n    callAPI: `${API_URL}/channels/spy/${recipient}/${sip}`,\n    needAuth: true\n  };\n}\n\nexport function spySipResetError() {\n  return {\n    type: SIP_SPY + RESET_ERROR\n  };\n}\n","import {\n  API_URL,\n  LOAD_ALL_QUEUES,\n  QUEUE_JOIN,\n  QUEUE_LEAVE,\n  QUEUE_MEMBER_STATUS\n} from '../helpers/constants';\n\nexport function getQueues() {\n  return {\n    type: LOAD_ALL_QUEUES,\n    callAPI: `${API_URL}/queue`,\n    needAuth: true\n  };\n}\n\nexport function queueJoin({ entry, id }) {\n  return {\n    type: QUEUE_JOIN,\n    payload: entry,\n    needAuth: true\n  };\n}\n\nexport function queueLeave({ entry, id }) {\n  return {\n    type: QUEUE_LEAVE,\n    payload: entry,\n    needAuth: true\n  };\n}\n\nexport function changeQueueMemberStatus(data) {\n  return {\n    type: QUEUE_MEMBER_STATUS,\n    payload: { data },\n    needAuth: true\n  };\n}\n","import { newChannel, removeChannel } from '../AC/channels';\nimport { changeSipStatus } from '../AC/sip';\nimport { changeQueueMemberStatus } from '../AC/queue';\nimport { BRIDGE_STOP } from '../helpers/constants';\n\nimport io from 'socket.io-client';\nimport { queueJoin, queueLeave } from 'AC/queue';\n\nvar socket = null;\n\nexport function webSocketMiddleware(store) {\n  return next => action => {\n    if (socket && action.type === BRIDGE_STOP) {\n      socket.emit('message', action.message);\n    }\n\n    return next(action);\n  };\n}\n\nexport default function(store) {\n  const token = localStorage.token;\n  if (!token) {\n    return;\n  }\n\n  // FIXME for DEV\n  // eslint-disable-next-line\n  const wsPort = process.env.NODE_ENV !== 'production' ? 3002 : location.port;\n\n  // FIXME for DEV\n  // eslint-disable-next-line\n  const url = `${location.protocol}//${location.hostname}:${wsPort}`;\n  const socket = io.connect(\n    url,\n    {\n      query: {\n        token: token.split(' ')[1]\n      }\n    }\n  );\n\n  socket.on('unauthorized', function(error) {\n    if (error.data.type === 'UnauthorizedError' || error.data.code === 'invalid_token') {\n      // redirect user to login page perhaps?\n    }\n  });\n\n  socket.on('remove-channel', data => {\n    store.dispatch(removeChannel(data));\n  });\n\n  socket.on('new-channel', data => {\n    store.dispatch(newChannel({ channel: data, id: data.id }));\n  });\n\n  socket.on('change-sip-status', data => {\n    store.dispatch(\n      changeSipStatus({\n        sip: data.sip,\n        status: data.status,\n        online: data.online\n      })\n    );\n  });\n\n  socket.on('change-queue-member-status', data => {\n    store.dispatch(changeQueueMemberStatus(data));\n  });\n\n  socket.on('queue-join', data => {\n    store.dispatch(queueJoin({ entry: data, id: data.uniqueid }));\n  });\n\n  socket.on('queue-leave', data => {\n    store.dispatch(queueLeave({ entry: data, id: data.uniqueid }));\n  });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from '../reducer';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { Map } from 'immutable';\n\nimport api from '../middlewares/api';\nimport startWS, { webSocketMiddleware } from '../middlewares/socketMiddleware';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet middleware = [thunk, api, webSocketMiddleware];\n\nif (process.env.NODE_ENV !== 'production' && false) {\n  const logger = createLogger();\n\n  middleware = [...middleware, logger];\n}\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\n\nconst initialState = Map({});\n\nconst store = createStore(reducer, initialState, enhancer);\nstartWS(store);\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept(() => {\n    const nextRootReducer = require('../reducer').default;\n    store.replaceReducer(nextRootReducer);\n  });\n}\n\n// window.store = store;\nexport default store;\n","import { START, SUCCESS, FAIL, LOG_OUT } from '../helpers/constants';\nimport { paramsForAPI } from '../helpers/common';\nimport axios from 'axios';\n\nexport default store => next => action => {\n  const { callAPI, methodAPI, needAuth, payload, params, type, ...rest } = action;\n\n  if (!callAPI) {\n    return next(action);\n  }\n\n  next({ ...rest, type: type + START, payload });\n\n  let options = {\n    method: methodAPI || 'GET'\n  };\n\n  if (options.method === 'GET' && params) {\n    options.params = params;\n  }\n\n  if (methodAPI === 'POST' || methodAPI === 'PUT' || methodAPI === 'PATCH') {\n    options.headers = {\n      Accept: 'application/json, text/plain, */*',\n      'Content-Type': 'application/json;charset=utf-8' //axios\n    };\n\n    options.body = params ? paramsForAPI(params) : paramsForAPI(payload);\n    options.data = params ? params : payload;\n  }\n\n  if (needAuth) {\n    axios.defaults.headers.common['Authorization'] = store.getState().getIn(['auth', 'token']);\n  }\n\n  options.url = callAPI;\n  // FIXME for DEV\n  options.url =\n    process.env.NODE_ENV !== 'production'\n      ? // eslint-disable-next-line\n        `${location.protocol}//${location.hostname}:3002${options.url}`\n      : options.url;\n\n  axios(options)\n    .then(response => next({ ...rest, type: type + SUCCESS, response: response.data, payload }))\n    .catch(error => {\n      if (error.response.status === 403 || error.response.status === 401) {\n        localStorage.removeItem('token');\n        next({ ...rest, payload, type: LOG_OUT });\n      }\n\n      return next({\n        ...rest,\n        type: type + FAIL,\n        payload,\n        response: {\n          ...(error.response.data.field && { field: error.response.data.field }),\n          ...(error.response.data.errorMessage && {\n            errorMessage: error.response.data.errorMessage\n          }),\n          errorCode: error.response.status\n        }\n      });\n    });\n};\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\r\nimport { is } from 'immutable';\r\n\r\nexport const createImmutableEqualSelector = createSelectorCreator(defaultMemoize, is);\r\n","import { createImmutableEqualSelector } from './_helper';\r\n\r\nexport const getQueuesIsLoadedState = state => state.getIn(['queue', 'isLoaded']);\r\n\r\nexport const getQueuesIsLoadingState = state => state.getIn(['queue', 'isLoading']);\r\n\r\nconst getQueuesKeys = state => state.getIn(['queue', 'entities']).map((el, key) => key);\r\n\r\nexport const getQueuesKeysState = createImmutableEqualSelector([getQueuesKeys], queue => queue);\r\n\r\nconst getFilteredMembers = (state, entity) => state.getIn(['queue', 'entities', entity, 'members']);\r\n\r\nexport const getFilteredMembersState = () => {\r\n  return createImmutableEqualSelector([getFilteredMembers], sip =>\r\n    sip.filter(el => el.online).sort((a, b) => a.sip - b.sip)\r\n  );\r\n};\r\n\r\nexport const getFilteredMembersLengthState = () => {\r\n  return createImmutableEqualSelector(\r\n    [getFilteredMembers],\r\n    sip => sip.filter(el => el.online).size\r\n  );\r\n};\r\n\r\nconst getDetail = (state, entity) => state.getIn(['queue', 'entities', entity, 'params']);\r\n\r\nexport const getDetailState = () => {\r\n  return createImmutableEqualSelector([getDetail], state => state);\r\n};\r\n\r\nconst getQueueEntries = (state, queueId) => state.getIn(['queue', 'entities', queueId, 'entries']);\r\n\r\nexport const getQueueEntriesState = () => {\r\n  return createImmutableEqualSelector([getQueueEntries], entries => {\r\n    return entries.sort((a, b) => b.wait - a.wait);\r\n  });\r\n};\r\n\r\nconst getQueueSipPeer = (state, { memberOfQueue, sip }) =>\r\n  state.getIn(['queue', 'entities', memberOfQueue, 'members', sip]);\r\nexport const getQueueSipPeerState = () =>\r\n  createImmutableEqualSelector([getQueueSipPeer], state => state);\r\n","import React, { PureComponent } from 'react';\nimport { NavLink as RRNavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nimport { logOutUser } from 'AC/auth';\nimport { getQueues } from 'AC/queue';\nimport {\n  getQueuesIsLoadedState,\n  getQueuesIsLoadingState,\n  getQueuesKeysState\n} from '../../store/selectors/queue';\n\nclass Header extends PureComponent {\n  state = {\n    isOpen: false\n  };\n\n  componentDidMount() {\n    const { isLoadingQueues, isLoadedQueues } = this.props;\n\n    if (!isLoadingQueues && !isLoadedQueues) {\n      this.props.getQueues();\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    const { logOutUser, isQueuesExist } = this.props;\n\n    return (\n      <header>\n        <Navbar color=\"primary\" dark expand=\"md\">\n          <NavbarBrand tag={RRNavLink} to=\"/dashboard\">\n            MoniAst\n          </NavbarBrand>\n\n          <NavbarToggler onClick={this.toggle} />\n\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavLink tag={RRNavLink} to=\"/dashboard\">\n                  Dashboard\n                </NavLink>\n              </NavItem>\n              {isQueuesExist && (\n                <NavItem>\n                  <NavLink tag={RRNavLink} to=\"/queues\">\n                    Queues\n                  </NavLink>\n                </NavItem>\n              )}\n              <NavItem>\n                <NavLink tag={RRNavLink} to=\"/users\">\n                  Users\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink onClick={logOutUser} href=\"#\">\n                  Sign Out\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </header>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const queues = getQueuesKeysState(state);\n\n  return {\n    isQueuesExist: queues ? !!queues.size : null,\n    isLoadingQueues: getQueuesIsLoadingState(state),\n    isLoadedQueues: getQueuesIsLoadedState(state)\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { logOutUser, getQueues }\n  )(Header)\n);\n","import { API_URL, AUTH_USER, LOG_OUT, START, SUCCESS, FAIL } from '../helpers/constants';\n\nimport axios from 'axios';\n\nexport function loginUser({ username, password, path }) {\n  return dispatch => {\n    dispatch({\n      type: AUTH_USER + START\n    });\n\n    const url =\n      process.env.NODE_ENV === 'production'\n        ? `${API_URL}/auth/login`\n        : // FIXME for DEV\n          // eslint-disable-next-line\n          `${location.protocol}//${location.hostname}:3002${API_URL}/auth/login`;\n    // const url = `${API_URL}/auth/login`;\n\n    axios({\n      url,\n      method: 'post',\n      data: { username, password }\n    })\n      .then(response => {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('sip', response.data.user.sip);\n\n        dispatch({\n          type: AUTH_USER + SUCCESS,\n          payload: { username, password, path },\n          response: response.data\n        });\n      })\n      .catch(error => {\n        dispatch({\n          type: AUTH_USER + FAIL,\n          payload: { username, password, path },\n          response: {\n            errorMessage: error.response ? error.response.data : 'No response',\n            field: error.response ? error.response.data.field : '',\n            errorCode: error.response ? error.response.status : 0\n          }\n        });\n      });\n  };\n}\n\nexport function logOutUser() {\n  localStorage.removeItem('token');\n  return { type: LOG_OUT };\n}\n","import React, { Component } from 'react';\n\nimport Header from 'components/Header/index';\nimport { ToastContainer } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './content.css';\n\nclass Content extends Component {\n  render() {\n    return (\n      <div>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={10000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n\n        <Header />\n\n        <div>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { loginUser } from 'AC/auth';\nimport { withRouter } from 'react-router-dom';\n\nimport './login.css';\nimport {\n  getAuthErrorCodeState,\n  getAuthErrorMessageState,\n  getAuthIsErrorState,\n  getAuthIsLoadingInState,\n  getAuthIsLoggedInState\n} from '../../store/selectors/auth';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: ''\n  };\n\n  componentDidMount() {\n    if (this.props.isLoggedIn) {\n      const locationState = this.props.location.state;\n\n      this.props.history.push(locationState ? locationState.from : '/dashboard');\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, prevContext) {\n    if (this.props.isLoggedIn) {\n      const locationState = this.props.location.state;\n\n      this.props.history.push(\n        locationState && locationState.from ? locationState.from.pathname : '/dashboard'\n      );\n    }\n  }\n\n  handleChangeInput = ev => {\n    this.setState({ [ev.target.getAttribute('name')]: ev.target.value });\n  };\n\n  render() {\n    const { isError, isLoading, errorCode } = this.props;\n\n    let errorMessage = '';\n    if (isError) {\n      errorMessage =\n        errorCode === 401 || errorCode === 403\n          ? 'Wrong username or password'\n          : 'Error has occurred';\n    }\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"sr-only\">\n          MoniAst - Asterisk real-time monitoring calls, agents, queues\n        </h1>\n        <form className=\"form-signin\" onSubmit={this.handleSubmitForm}>\n          <h2 className=\"form-signin-heading\">Please sign in</h2>\n\n          {isError && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {errorMessage}\n            </div>\n          )}\n\n          <label htmlFor=\"inputUsername\" className=\"sr-only\">\n            Username\n          </label>\n          <input\n            type=\"text\"\n            id=\"inputUsername\"\n            name=\"username\"\n            className=\"form-control\"\n            placeholder=\"Username\"\n            required\n            autoFocus\n            value={this.state.username}\n            onChange={this.handleChangeInput}\n            aria-label=\"Username\"\n          />\n\n          <label htmlFor=\"inputPassword\" className=\"sr-only\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            id=\"inputPassword\"\n            name=\"password\"\n            className=\"form-control\"\n            placeholder=\"Password\"\n            required\n            value={this.state.password}\n            onChange={this.handleChangeInput}\n            aria-label=\"Password\"\n          />\n\n          <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\" disabled={isLoading}>\n            Sign in &nbsp;\n            {isLoading && <i className=\"fa fa-circle-o-notch fa-spin login-spinner\" />}\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  handleSubmitForm = ev => {\n    ev.preventDefault();\n    const locationState = this.props.location.state;\n    const { username, password } = this.state;\n\n    this.props.loginUser({\n      username,\n      password,\n      from: locationState && locationState.from && locationState.from.pathname\n    });\n  };\n}\n\nLogin.propTypes = {\n  isError: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isLoggedIn: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: getAuthIsLoggedInState(state),\n    isLoading: getAuthIsLoadingInState(state),\n\n    isError: getAuthIsErrorState(state),\n    errorCode: getAuthErrorCodeState(state),\n    errorMessage: getAuthErrorMessageState(state)\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { loginUser }\n  )(Login)\n);\n","import { createImmutableEqualSelector } from './_helper';\r\n\r\nimport { SIP_FILTER_ALL, SIP_FILTER_ONLINE } from '../../helpers/constants';\r\n\r\nexport const getSipIsLoadedState = state => state.getIn(['sip', 'isLoaded']);\r\nexport const getSipIsLoadingState = state => state.getIn(['sip', 'isLoading']);\r\n\r\nexport const getSipSelectedSipState = state => state.getIn(['sip', 'selectedSip']);\r\n\r\nexport const getSipSpyIsErrorState = state => state.getIn(['sip', 'sipSpy', 'isError']);\r\nexport const getSipSpyStatusState = state => state.getIn(['sip', 'sipSpy', 'status']);\r\nexport const getSipSpyMessageState = state => state.getIn(['sip', 'sipSpy', 'message']);\r\n\r\nexport const getSipFilter = state => state.getIn(['sip', 'filter']);\r\nexport const getSipFilterState = getSipFilter;\r\n\r\nconst getSipPeer = (state, sip) => state.getIn(['sip', 'entities', sip]);\r\nexport const getSipPeerState = () => createImmutableEqualSelector([getSipPeer], state => state);\r\n\r\nconst filters = {\r\n  [SIP_FILTER_ONLINE]: el => el.online,\r\n  [SIP_FILTER_ALL]: () => true\r\n};\r\n\r\nconst getFilteredSips = state => state.getIn(['sip', 'entitiesSimple']);\r\n\r\nexport const getFilteredSipsState = createImmutableEqualSelector(\r\n  [getFilteredSips, getSipFilter],\r\n  (sip, filter) => {\r\n    if (filter === SIP_FILTER_ALL) {\r\n      return sip\r\n        .filter(sip => !sip.isTrunk)\r\n        .sort((a, b) => a.sip - b.sip)\r\n        .sort((a, b) => b.online - a.online);\r\n    }\r\n\r\n    return sip\r\n      .filter(sip => !sip.isTrunk)\r\n      .filter(filters[filter])\r\n      .sort((a, b) => a.sip - b.sip)\r\n      .sort((a, b) => b.online - a.online);\r\n  }\r\n);\r\n\r\nexport const getFilteredTrunksState = createImmutableEqualSelector(\r\n  [getFilteredSips, getSipFilter],\r\n  (sip, filter) => {\r\n    if (filter === SIP_FILTER_ALL) {\r\n      return sip\r\n        .filter(sip => sip.isTrunk)\r\n        .sort((a, b) => a.sip > b.sip)\r\n        .sort((a, b) => b.online - a.online);\r\n    }\r\n\r\n    return sip\r\n      .filter(sip => sip.isTrunk)\r\n      .filter(filters[filter])\r\n      .sort((a, b) => a.sip > b.sip)\r\n      .sort((a, b) => b.online - a.online);\r\n  }\r\n);\r\n","import { createImmutableEqualSelector } from './_helper';\r\n\r\nexport const getChannelsState = state => state.get('channels');\r\n\r\nconst getChannelsBySip = (state, sipPeer) =>\r\n  state.get('channels').filter(item => item.sip === sipPeer.sip);\r\n\r\nexport const getChannelsBySipState = () => {\r\n  return createImmutableEqualSelector([getChannelsBySip], channels => channels);\r\n};\r\n","import { compose, withState, withHandlers, lifecycle } from 'recompose';\r\nimport { secToHuman } from '../../helpers/common';\r\n\r\nconst enchance = compose(\r\n  withState('duration', 'setDuration', props => {\r\n    const startDate = new Date(props.date);\r\n    const currentDate = Date.now();\r\n    return parseInt((currentDate - startDate) / 1000) + props.duration;\r\n  }),\r\n  withState('intervalId', 'setIntervalId', null),\r\n  withHandlers({\r\n    handleStartInterval: props => () => {\r\n      const { duration, date } = props;\r\n      const startDate = new Date(date);\r\n\r\n      let intervalId = setInterval(() => {\r\n        const currentDate = new Date();\r\n        props.setDuration(parseInt((currentDate - startDate) / 1000) + duration);\r\n      }, 1000);\r\n\r\n      props.setIntervalId(intervalId);\r\n    },\r\n\r\n    handleStopInterval: props => () => {\r\n      clearInterval(props.intervalId);\r\n      props.setIntervalId(null);\r\n    }\r\n  }),\r\n  lifecycle({\r\n    componentDidMount() {\r\n      if (this.props.isTicking && !this.props.intervalId) {\r\n        this.props.handleStartInterval();\r\n      }\r\n    },\r\n    componentDidUpdate() {\r\n      if (this.props.isTicking && !this.props.intervalId) {\r\n        this.props.handleStartInterval();\r\n      }\r\n    },\r\n    componentWillUnmount() {\r\n      if (this.props.intervalId) {\r\n        this.props.handleStopInterval();\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nfunction DurationTimer(props) {\r\n  const durationHuman = props.isTicking ? secToHuman(props.duration) : '';\r\n\r\n  return durationHuman ? durationHuman : null;\r\n}\r\n\r\nexport default enchance(DurationTimer);\r\n","import React, { PureComponent, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport DurationTimer from '../DurationTimer/DurationTimer';\n\nimport { CHANNEL_STATUS_UP } from 'helpers/constants';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './sipPeerChannel.css';\nimport { CardBody } from 'reactstrap';\n\nclass SipPeerChannel extends PureComponent {\n  render() {\n    const { channel } = this.props;\n\n    const statusIcon =\n      channel.status === CHANNEL_STATUS_UP ? (\n        <FontAwesomeIcon icon=\"phone\" title=\"Talking\" />\n      ) : (\n        <FontAwesomeIcon icon=\"phone-volume\" className=\"channel-ringing\" title=\"Ringing\" />\n      );\n\n    return (\n      <div title={channel.status}>\n        {statusIcon} {channel.connectedlinenum}\n        <span className=\"float-right\">\n          <DurationTimer\n            duration={channel.duration}\n            date={channel.date}\n            isTicking={channel.status === CHANNEL_STATUS_UP}\n          />\n        </span>\n      </div>\n    );\n  }\n}\n\nSipPeerChannel.propTypes = {\n  channel: PropTypes.object.isRequired\n};\n\nconst SipPeerChannels = memo(({ channels, sip }) => {\n  if (!channels || !channels.size) {\n    return null;\n  }\n\n  const sipChannels = channels.entrySeq().map(([key, channel]) => {\n    return (\n      <div key={channel.id}>\n        <SipPeerChannel channel={channel} sip={sip} />\n      </div>\n    );\n  });\n\n  return <CardBody className=\"sip-peer-body\">{sipChannels}</CardBody>;\n});\n\nSipPeerChannels.propTypes = {\n  channels: PropTypes.object,\n  sip: PropTypes.string\n};\n\nexport default SipPeerChannels;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getChannelsBySipState } from 'store/selectors/channels';\n\nimport { Card, CardHeader } from 'reactstrap';\n\nimport SipPeerChannels from 'components/SipPeerChannels';\n// import SipPeerQueueDetail from \"components/SipPeer/SipPeerQueueDetail\";\nimport './sipPeer.css';\n\nimport {\n  CHANNEL_STATUS_OUT_RINGING,\n  CHANNEL_STATUS_UP,\n  SIP_STATUS_IN_USE,\n  SIP_STATUS_RINGING\n} from 'helpers/constants';\nimport { getSipPeerState } from '../../store/selectors/sip';\nimport { getQueueSipPeerState } from '../../store/selectors/queue';\n\nconst statusStyle = {\n  SIP_STATUS_IDLE: 'success',\n  SIP_STATUS_IN_USE: 'primary', // ring\n  SIP_STATUS_BUSY: 'warning',\n  SIP_STATUS_UNAVAILABLE: 'default',\n  SIP_STATUS_RINGING: 'warning', // ringing\n  SIP_STATUS_ON_HOLD: 'success' // UP\n};\n\nclass SipPeer extends PureComponent {\n  static propTypes = {\n    selectSip: PropTypes.func,\n    sipPeer: PropTypes.object.isRequired,\n    channels: PropTypes.object,\n    isSelected: PropTypes.bool,\n    isTrunk: PropTypes.bool\n  };\n\n  handleSelectSip = ev => {\n    ev.preventDefault();\n\n    const { selectSip, sipPeer } = this.props;\n\n    selectSip(sipPeer.sip);\n  };\n\n  _isSipUp = channels => {\n    return (\n      channels &&\n      channels.size &&\n      !!channels.find(obj => obj.get('status') === CHANNEL_STATUS_UP) &&\n      SIP_STATUS_IN_USE\n    );\n  };\n\n  _isSipRinging = channels => {\n    return (\n      channels &&\n      channels.size &&\n      !!channels.find(obj => obj.get('status') === CHANNEL_STATUS_OUT_RINGING) &&\n      SIP_STATUS_RINGING\n    );\n  };\n\n  render() {\n    const {\n      channels,\n      sipPeerDetail,\n      isSelected,\n      isTrunk\n      // memberOfQueue\n    } = this.props;\n\n    const { login, sip, status } = sipPeerDetail;\n\n    const SipUp = this._isSipUp(channels);\n\n    const SipRinging = SipUp ? '' : this._isSipRinging(channels);\n\n    const peerStatusClass = statusStyle[SipUp] || statusStyle[SipRinging] || statusStyle[status];\n\n    const additionalClass = isSelected ? 'selected-sip' : '';\n\n    // const PeerQueueDetail = memberOfQueue ? (\n    //   <SipPeerQueueDetail sipPeerDetail={sipPeerDetail} />\n    // ) : null;\n\n    return (\n      <Card\n        className={`${additionalClass} border border-${\n          isSelected ? 'danger' : peerStatusClass\n        } text-${peerStatusClass} `}\n      >\n        <CardHeader\n          className={`${!isTrunk ? 'cursor-pointer' : ''} sip-peer-header`}\n          onClick={!isTrunk ? this.handleSelectSip : null}\n        >\n          <div className={`rounded-circle bg-${peerStatusClass} sip-status-indicator`} />\n          {` ${sip} ${login}`}\n        </CardHeader>\n\n        <SipPeerChannels channels={channels} sip={sip} />\n        {/*{sipChannelsElement}*/}\n\n        {/*{PeerQueueDetail}*/}\n      </Card>\n    );\n  }\n}\n\nfunction mapStateToProps(state, { sipPeer, memberOfQueue }) {\n  const getSipChannels = getChannelsBySipState();\n  const getQueueSipPeer = getQueueSipPeerState();\n  const getSipPeer = getSipPeerState();\n  let sipPeerDetail;\n\n  if (memberOfQueue) {\n    sipPeerDetail = getQueueSipPeer(state, { memberOfQueue, sip: sipPeer.sip });\n  } else {\n    sipPeerDetail = getSipPeer(state, sipPeer.sip);\n  }\n\n  return {\n    channels: getSipChannels(state, sipPeer),\n    sipPeerDetail\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(SipPeer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getFilteredTrunksState,\n  getSipIsLoadedState,\n  getSipIsLoadingState\n} from 'store/selectors/sip';\n\nimport { loadSipPeers } from 'AC/sip';\nimport { loadChannels } from 'AC/channels';\n\nimport { Card, CardBody, CardTitle, Col, Row, Badge } from 'reactstrap';\nimport SipPeer from 'components/SipPeer';\n\nclass PanelTrunk extends Component {\n  componentDidMount() {\n    const { loadSipPeers, loadChannels, isLoaded, isLoading } = this.props;\n\n    if (!isLoaded && !isLoading) {\n      loadSipPeers();\n      loadChannels();\n    }\n  }\n\n  render() {\n    const { sip } = this.props;\n\n    const peers = sip.entrySeq().map(([key, sipPeer]) => {\n      return (\n        <Col key={sipPeer.sip} md=\"12\" style={{ marginBottom: '5px' }}>\n          <SipPeer sipPeer={sipPeer} isTrunk={true} />\n        </Col>\n      );\n    });\n\n    return (\n      <Card>\n        <CardBody>\n          <CardTitle>\n            <Badge color=\"primary\">Trunks</Badge>\n          </CardTitle>\n\n          <Row>{peers}</Row>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sip: getFilteredTrunksState(state),\n\n    isLoading: getSipIsLoadingState(state),\n    isLoaded: getSipIsLoadedState(state)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadSipPeers,\n    loadChannels\n  }\n)(PanelTrunk);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport {\n  getFilteredSipsState,\n  getSipIsLoadedState,\n  getSipIsLoadingState,\n  getSipSelectedSipState\n} from 'store/selectors/sip';\n\nimport { loadSipPeers, selectSip } from 'AC/sip';\nimport { loadChannels } from 'AC/channels';\n\nimport { Card, CardBody, Col, Row } from 'reactstrap';\nimport SipPeer from 'components/SipPeer';\n\nclass PanelSip extends Component {\n  componentDidMount() {\n    const { loadSipPeers, loadChannels, isLoaded, isLoading } = this.props;\n\n    if (!isLoaded && !isLoading) {\n      loadSipPeers();\n      loadChannels();\n    }\n  }\n\n  renderItems = () => {\n    const { sip, selectedSip, selectSip } = this.props;\n\n    return sip.entrySeq().map(([key, sipPeer]) => {\n      const isSelected = selectedSip && selectedSip === sipPeer.sip;\n\n      return (\n        <Col key={sipPeer.sip} md=\"4\" className=\"col-sip\">\n          <SipPeer sipPeer={sipPeer} selectSip={selectSip} isSelected={!!isSelected} />\n        </Col>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h1 className=\"sr-only\">All sips and trunks</h1>\n        <Card>\n          <CardBody>\n            <Row>{this.renderItems()}</Row>\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n}\n\nPanelSip.propTypes = {\n  sip: PropTypes.object,\n\n  isLoading: PropTypes.bool,\n  isLoaded: PropTypes.bool,\n  selectSip: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n  return {\n    sip: getFilteredSipsState(state),\n    isLoading: getSipIsLoadingState(state),\n    isLoaded: getSipIsLoadedState(state),\n    selectedSip: getSipSelectedSipState(state)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadSipPeers,\n    loadChannels,\n    selectSip\n  }\n)(PanelSip);\n","import React from 'react';\r\nimport { ButtonGroup } from 'reactstrap';\r\n\r\nimport styles from './Toolbar.module.css';\r\nimport Container from 'reactstrap/es/Container';\r\n\r\nconst Toolbar = ({ children, isFluid }) => {\r\n  return (\r\n    <div className={`nav-scroller bg-white shadow-sm ${styles.container}`}>\r\n      <Container fluid={isFluid}>\r\n        <div className={`col-md-12 `}>\r\n          <nav className=\"nav nav-underline\" aria-label=\"Toolbar\">\r\n            <ButtonGroup role=\"group\">{children}</ButtonGroup>\r\n          </nav>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { toast } from 'react-toastify';\n\nimport { filterSip, spySip, spySipResetError } from 'AC/sip';\n\nimport { SIP_FILTER_ALL, SIP_FILTER_ONLINE } from 'helpers/constants';\nimport {\n  getFilteredSipsState,\n  getSipFilterState,\n  getSipIsLoadedState,\n  getSipIsLoadingState,\n  getSipSelectedSipState,\n  getSipSpyIsErrorState,\n  getSipSpyStatusState,\n  getSipSpyMessageState\n} from 'store/selectors/sip';\nimport { getAuthSipState } from 'store/selectors/auth';\nimport { getChannelsState } from 'store/selectors/channels';\nimport Toolbar from 'components/Toolbar';\n\nclass SipToolbar extends Component {\n  static propTypes = {\n    selectedSip: PropTypes.string,\n    filterSip: PropTypes.func,\n    spySip: PropTypes.func,\n    filter: PropTypes.string,\n    snackBarActions: PropTypes.object,\n\n    sipSpyIsError: PropTypes.bool,\n    sipSpyStatus: PropTypes.string,\n    sipSpyMessage: PropTypes.string,\n\n    isHideFilter: PropTypes.bool\n  };\n\n  componentDidUpdate(prevProps, prevState, prevContext) {\n    if (this.props.sipSpyIsError && prevProps.sipSpyIsError !== true) {\n      toast.error(this.props.sipSpyMessage || 'An error has occurred');\n\n      prevProps.spySipResetError();\n    }\n\n    if (\n      !this.props.sipSpyIsError &&\n      this.props.sipSpyStatus !== prevProps.sipSpyStatus &&\n      this.props.sipSpyMessage\n    ) {\n      toast.info(this.props.sipSpyMessage);\n    }\n  }\n\n  handleToggleOnline = ev => {\n    ev.preventDefault();\n\n    const { filterSip, filter } = this.props;\n\n    if (filter === SIP_FILTER_ALL || !filter) {\n      return filterSip(SIP_FILTER_ONLINE);\n    }\n\n    filterSip(SIP_FILTER_ALL);\n  };\n\n  handleSpy = () => {\n    const { selectedSip, spySip, authSIP } = this.props;\n\n    spySip(authSIP, selectedSip);\n  };\n\n  handleSpyAndWhisper = () => {\n    const { selectedSip, spySip, authSIP } = this.props;\n\n    spySip(authSIP, selectedSip, true);\n  };\n\n  render() {\n    const { selectedSip, filter, queueEntity, isHideFilter } = this.props;\n\n    const filterStateText = filter === SIP_FILTER_ALL ? 'Show online' : 'Show all';\n\n    return (\n      <Toolbar isFluid={true}>\n        {!queueEntity &&\n          !isHideFilter && (\n            <Button outline color=\"info\" onClick={this.handleToggleOnline}>\n              {filterStateText}\n            </Button>\n          )}\n\n        <Button outline color=\"info\" disabled={!selectedSip} onClick={this.handleSpy} title=\"Spy\" aria-label=\"Spy\">\n          <FontAwesomeIcon icon=\"user-secret\" title=\"Spy\" />\n        </Button>\n\n        <Button\n          outline\n          color=\"info\"\n          disabled={!selectedSip}\n          onClick={this.handleSpyAndWhisper}\n          title=\"Spy & Whisper\"\n          aria-label=\"Spy & Whisper\"\n        >\n          <FontAwesomeIcon icon=\"microphone\" title=\"Spy & whisper\" />\n        </Button>\n      </Toolbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sip: getFilteredSipsState(state),\n    channels: getChannelsState(state),\n\n    isLoading: getSipIsLoadingState(state),\n    isLoaded: getSipIsLoadedState(state),\n    selectedSip: getSipSelectedSipState(state),\n\n    filter: getSipFilterState(state),\n    authSIP: getAuthSipState(state),\n\n    sipSpyIsError: getSipSpyIsErrorState(state),\n    sipSpyStatus: getSipSpyStatusState(state),\n    sipSpyMessage: getSipSpyMessageState(state)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    filterSip,\n    spySip,\n    spySipResetError\n  }\n)(SipToolbar);\n","import React, { Component } from 'react';\n\nimport PanelTrunk from 'components/PanelTrunk';\nimport PanelSip from 'components/PanelSip';\nimport SipToolbar from '../SipToolbar';\n\nexport class Dashboard extends Component {\n  render() {\n    return (\n      <main>\n        <SipToolbar />\n\n        <div className=\"container-fluid\">\n          <div className=\"row extensions-container\">\n            <div className=\"col-md-9\">\n              <PanelSip />\n            </div>\n\n            <div className=\"col-md-3\">\n              <PanelTrunk />\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { PureComponent } from 'react';\r\nimport { Card, CardHeader } from 'reactstrap';\r\nimport DurationTimer from '../DurationTimer/DurationTimer';\r\n\r\nimport styles from './QueueEntriy.module.css';\r\n\r\nfunction QueueEntry({ queueEntry }) {\r\n  return (\r\n    <Card className={styles.content}>\r\n      <CardHeader className={'sip-peer-header'}>\r\n        {queueEntry.position}){`  `}\r\n        {queueEntry.calleridnum}\r\n        <div className=\"float-right\">\r\n          <DurationTimer duration={+queueEntry.wait} date={queueEntry.date} isTicking={true} />\r\n        </div>\r\n      </CardHeader>\r\n    </Card>\r\n  );\r\n}\r\n\r\nclass QueueEntries extends PureComponent {\r\n  render() {\r\n    const { queueEntries } = this.props;\r\n\r\n    if (!(queueEntries && queueEntries.size)) {\r\n      return (\r\n        <div className=\"col-md-12 text-center\">\r\n          <p className={`text-muted ${styles['entries--empty']}`}>Queue is empty</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return queueEntries.entrySeq().map(([key, queueEntry]) => {\r\n      return <QueueEntry key={queueEntry.uniqueid} queueEntry={queueEntry} />;\r\n    });\r\n  }\r\n}\r\n\r\nexport default QueueEntries;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getQueueEntriesState } from 'store/selectors/queue';\r\nimport QueueEntries from './QueueEntries';\r\n\r\nclass QueueEntryContainer extends Component {\r\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    return !nextProps.queueEntries.equals(this.props.queueEntries);\r\n  }\r\n\r\n  render() {\r\n    const { queueEntries, queueId } = this.props;\r\n    return <QueueEntries queueEntries={queueEntries} queueId={queueId} />;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, { queueId }) {\r\n  const getEntries = getQueueEntriesState();\r\n\r\n  return {\r\n    queueEntries: getEntries(state, queueId)\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(QueueEntryContainer);\r\n","import React, { memo } from 'react';\r\nimport SipPeer from '../SipPeer';\r\nimport { Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst QueueMembers = ({ queueMembers, selectedSip, queueName, queueId, selectSip }) => {\r\n  if (!queueMembers.size) {\r\n    return (\r\n      <Col md=\"12\" className=\"text-center text-muted\">\r\n        No active members\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  return queueMembers.entrySeq().map(([key, sipPeer]) => {\r\n    const isSelected = selectedSip && selectedSip === sipPeer.sip;\r\n\r\n    return (\r\n      <Col key={sipPeer.sip} md=\"4\" className=\"col-sip\">\r\n        <SipPeer\r\n          sipPeer={sipPeer}\r\n          memberOfQueue={queueId}\r\n          selectSip={selectSip}\r\n          isSelected={!!isSelected}\r\n        />\r\n      </Col>\r\n    );\r\n  });\r\n};\r\n\r\nQueueMembers.propTypes = {\r\n  queueMembers: PropTypes.object,\r\n  queueName: PropTypes.string,\r\n  selectSip: PropTypes.func,\r\n  isSelected: PropTypes.string\r\n};\r\n\r\nexport default memo(QueueMembers);\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\nimport QueueMembers from './QueueMembers';\r\n\r\nimport { getDetailState, getFilteredMembersState } from 'store/selectors/queue';\r\nimport { selectSip } from 'AC/sip';\r\n\r\nimport './queue.css';\r\nimport { getSipSelectedSipState } from '../../store/selectors/sip';\r\n\r\nfunction mapStateToProps(state, { queueId }) {\r\n  const getMembers = getFilteredMembersState();\r\n  const getDetail = getDetailState();\r\n  return {\r\n    queueDetail: getDetail(state, queueId),\r\n    queueMembers: getMembers(state, queueId),\r\n    selectedSip: getSipSelectedSipState(state)\r\n  };\r\n}\r\n\r\nconst enhance = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      selectSip\r\n    }\r\n  )\r\n);\r\n\r\nexport default enhance(QueueMembers);\r\n","import React from 'react';\r\nimport { ButtonGroup, Card, CardBody, Row } from 'reactstrap';\r\n\r\nimport QueueEntryContainer from 'components/QueueEntry/QueueEntryContainer';\r\nimport QueueMembersContainer from 'components/Queue/QueueMembersContainer';\r\n\r\nimport styles from './QueueComponent.module.css';\r\nimport { getFilteredMembersLengthState } from '../../store/selectors/queue';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n// const QueueDetails = ({ queueDetail }) => (\r\n//   <small>\r\n//     <ul>\r\n//       <li>Answered - {queueDetail.completed}</li>\r\n//       <li>Missed - {queueDetail.abandoned}</li>\r\n//     </ul>\r\n//   </small>\r\n// );\r\n\r\nconst QueueComponent = props => {\r\n  const { entity, isEmpty } = props;\r\n\r\n  if (isEmpty) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={'queue'}>\r\n      <CardBody>\r\n        <Row>\r\n          <ButtonGroup className={styles.title}>\r\n            <span className=\"badge badge-info\">Queue - {entity}</span>\r\n          </ButtonGroup>\r\n        </Row>\r\n\r\n        <Row>\r\n          <div className=\"col-md-9\">\r\n            <Row>\r\n              <QueueMembersContainer queueId={entity} />\r\n            </Row>\r\n          </div>\r\n          <div className={`col-md-3 ${styles.entries__divider}`}>\r\n            <Row>\r\n              <QueueEntryContainer queueId={entity} />\r\n            </Row>\r\n          </div>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// export default QueueComponent;\r\n\r\nfunction mapStateToProps(state, { entity }) {\r\n  const getMembersLength = getFilteredMembersLengthState();\r\n\r\n  return {\r\n    isEmpty: !getMembersLength(state, entity)\r\n  };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(QueueComponent);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getQueues } from 'AC/queue';\nimport { loadSipPeers } from 'AC/sip';\nimport { loadChannels } from 'AC/channels';\n\nimport {\n  getQueuesKeysState,\n  getQueuesIsLoadedState,\n  getQueuesIsLoadingState\n} from 'store/selectors/queue';\nimport QueueComponent from '../Queue/QueueComponent';\nimport { getSipIsLoadedState, getSipIsLoadingState } from '../../store/selectors/sip';\nimport SipToolbar from '../SipToolbar';\nimport styles from './PanelQueues.module.css';\n\nexport class PanelQueues extends Component {\n  componentDidMount() {\n    const { isLoading, isLoaded, isLoadedSip, isLoadingSip } = this.props;\n\n    if (!isLoaded && !isLoading) {\n      this.props.getQueues();\n    }\n\n    if (!isLoadedSip && !isLoadingSip) {\n      const { loadSipPeers, loadChannels } = this.props;\n\n      loadSipPeers();\n      loadChannels();\n    }\n  }\n\n  render() {\n    const { queues } = this.props;\n\n    const { isLoaded, isLoadedSip } = this.props;\n\n    if (!isLoaded || !isLoadedSip) {\n      return <h1>Loading..</h1>;\n    }\n\n    const queuesComponent = queues.entrySeq().map(([key, item]) => {\n      return <QueueComponent key={key} entity={key} />;\n    });\n\n    return (\n      <div className=\"container-fluid\">\n        <h1 className=\"sr-only\">All queues members and queue entries</h1>\n        <div className=\"row\">\n          <SipToolbar isHideFilter={true} />\n\n          <div className={`col-12 ${styles.content}`}>{queuesComponent}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    queues: getQueuesKeysState(state),\n    isLoading: getQueuesIsLoadingState(state),\n    isLoaded: getQueuesIsLoadedState(state),\n\n    isLoadingSip: getSipIsLoadingState(state),\n    isLoadedSip: getSipIsLoadedState(state)\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getQueues, loadSipPeers, loadChannels }\n)(PanelQueues);\n","// import { createImmutableEqualSelector } from './_helper';\r\n\r\nexport const getUserIsLoadedState = state => state.getIn(['user', 'isLoaded']);\r\nexport const getUserIsLoadingState = state => state.getIn(['user', 'isLoading']);\r\nexport const getUserIsErrorState = state => state.getIn(['user', 'isError']);\r\nexport const getUserIsErrorMsgState = state => state.getIn(['user', 'errorMessage']);\r\nexport const getUserErrorFieldState = state => state.getIn(['user', 'errorField']);\r\nexport const getUserShouldRedirectState = state => state.getIn(['user', 'shouldRedirect']);\r\nexport const getUserIsSubmittedState = state => state.getIn(['user', 'submitSuccess']);\r\n\r\nexport const getUsersState = state => state.getIn(['user', 'entities']);\r\n\r\nexport const getUserState = (state, userId) => state.getIn(['user', 'entities', userId]);\r\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getUsers, deleteUser } from 'AC/user';\nimport { Container, Row, Table, ButtonGroup, Button, NavLink, Card } from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\nimport { getUserIsLoadedState, getUserIsLoadingState, getUsersState } from 'store/selectors/user';\n\nimport Toolbar from 'components/Toolbar';\n\nimport styles from './PanelUsers.module.css';\n\nclass PanelUsers extends Component {\n  static propTypes = {\n    entities: PropTypes.object,\n    isLoading: PropTypes.bool,\n    isLoaded: PropTypes.bool\n  };\n\n  componentDidMount() {\n    const { isLoading, getUsers } = this.props;\n\n    if (!isLoading) {\n      getUsers();\n    }\n  }\n\n  _handleDeleteUser = username => () => {\n    if (window.confirm(`Delete ${username}?`)) {\n      this.props.deleteUser(username);\n    }\n  };\n\n  _renderTableHeader() {\n    return (\n      <thead>\n        <tr>\n          <th>Username</th>\n          <th>SIP</th>\n          <th>Role</th>\n          <th>Full Name</th>\n          <th />\n        </tr>\n      </thead>\n    );\n  }\n  _renderTableItem(user) {\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <tr key={user._id}>\n        <td>\n          <RRNavLink to={`/users/${user.username}`}>{user.username}</RRNavLink>\n        </td>\n        <td>{user.sip}</td>\n        <td>{user.role}</td>\n        <td>\n          {user.firstName} {user.lastName}\n        </td>\n        <td>\n          <ButtonGroup>\n            <Button\n              tag={RRNavLink}\n              to={`/users/${user.username}`}\n              outline\n              color=\"info\"\n              aria-label={`Edit user: ${user.username}`}\n            >\n              Edit\n            </Button>\n            <Button\n              outline\n              color=\"danger\"\n              onClick={this._handleDeleteUser(user.username)}\n              aria-label={`Delete user: ${user.username}`}\n            >\n              Delete\n            </Button>\n          </ButtonGroup>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { entities: users } = this.props;\n\n    const usersComponent = users.entrySeq().map(([key, user]) => this._renderTableItem(user));\n\n    return (\n      <>\n        <h1 className=\"sr-only\">Manage users</h1>\n        <Toolbar isFluid={false}>\n          <NavLink tag={RRNavLink} to=\"/users/register\" className={styles.toolbar__link}>\n            <Button outline color=\"primary\">\n              Add User\n            </Button>\n          </NavLink>\n        </Toolbar>\n        <Container>\n          <Row>\n            <Card body={false} className={styles.content}>\n              <Table bordered hover striped responsive role=\"presentation\">\n                {this._renderTableHeader()}\n                <tbody>{usersComponent}</tbody>\n              </Table>\n            </Card>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    entities: getUsersState(state),\n    isLoading: getUserIsLoadingState(state),\n    isLoaded: getUserIsLoadedState(state)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getUsers, deleteUser }\n)(PanelUsers);\n","import {\n  API_URL,\n  POST_USER,\n  LOAD_USERS,\n  PATCH_USER,\n  DELETE_USER,\n  LOAD_USER\n} from '../helpers/constants';\n\nexport function getUsers() {\n  return {\n    type: LOAD_USERS,\n    callAPI: `${API_URL}/users`,\n    needAuth: true\n  };\n}\n\nexport function getUser(username) {\n  return {\n    type: LOAD_USER,\n    payload: { username },\n    callAPI: `${API_URL}/users/${username}`,\n    needAuth: true\n  };\n}\n\nexport function patchUser({ username, ...params }) {\n  return {\n    type: PATCH_USER,\n    payload: { username, params },\n    callAPI: `${API_URL}/users/${username}`,\n    needAuth: true,\n    methodAPI: 'PATCH',\n    params\n  };\n}\n\nexport function postUser(params) {\n  return {\n    type: POST_USER,\n    payload: { params },\n    callAPI: `${API_URL}/users/register`,\n    needAuth: true,\n    methodAPI: 'POST',\n    params\n  };\n}\n\nexport function deleteUser(username) {\n  return {\n    type: DELETE_USER,\n    payload: { username },\n    callAPI: `${API_URL}/users/${username}`,\n    needAuth: true,\n    methodAPI: 'DELETE'\n  };\n}\n","import React, { PureComponent } from 'react';\n\nimport { connect } from 'react-redux';\nimport { getUser, patchUser, postUser } from 'AC/user';\nimport { NavLink as RRNavLink } from 'react-router-dom';\nimport { Redirect } from 'react-router';\n\nimport PropTypes from 'prop-types';\n\nimport {\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n  Col,\n  Breadcrumb,\n  BreadcrumbItem\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  getUserErrorFieldState,\n  getUserIsErrorMsgState,\n  getUserIsErrorState,\n  getUserIsSubmittedState,\n  getUserState\n} from '../../store/selectors/user';\n\nimport { toast } from 'react-toastify';\nimport styles from './User.module.css';\n\nclass User extends PureComponent {\n  static propTypes = {\n    user: PropTypes.object,\n    isSubmitSuccess: PropTypes.bool,\n    isNew: PropTypes.bool,\n    isError: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    errorField: PropTypes.string\n  };\n\n  state = {\n    firstName: '',\n    lastName: '',\n    username: '',\n    role: 'Client',\n    sip: '',\n    _id: '',\n    password: '',\n    isSubmitSuccess: false\n  };\n\n  componentDidMount() {\n    const { match, getUser, user, isNew } = this.props;\n    if (isNew) {\n      return;\n    }\n\n    const username = match.params.id;\n\n    if (!user) {\n      return getUser(username);\n    }\n\n    const { _id, isLoading } = user;\n    if (!_id && !isLoading) {\n      return getUser(username);\n    }\n\n    this.setState({\n      ...user\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.user && nextProps.user.username !== prevState.username) {\n      return {\n        firstName: nextProps.user.firstName,\n        lastName: nextProps.user.lastName,\n        username: nextProps.user.username,\n        role: nextProps.user.role,\n        sip: nextProps.user.sip,\n        _id: nextProps.user._id\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, prevContext) {\n    const { isNew } = this.props;\n    if (this.props.isSubmitSuccess === true && prevProps.isSubmitSuccess === false) {\n      const message = isNew ? 'User successful created' : 'User successful updated';\n\n      toast.success(message);\n\n      this.setState({ isSubmitSuccess: true });\n    }\n\n    if (this.props.isError === true) {\n      toast.error(this.props.errorMessage || 'Error has occurred');\n    }\n  }\n\n  handleChangeInput = ev => {\n    this.setState({\n      [ev.target.name]: ev.target.value\n    });\n  };\n\n  handleSubmitForm = ev => {\n    ev.preventDefault();\n    const { firstName, lastName, sip, role, username, password } = this.state;\n    const { isNew, patchUser, postUser } = this.props;\n\n    const user = {\n      username,\n      firstName,\n      lastName,\n      sip,\n      role,\n      password\n    };\n\n    if (isNew) {\n      return postUser(user);\n    }\n\n    patchUser(user);\n  };\n\n  _renderFormItem({ label, field, type = 'text', isInvalid = false, ...attributes }) {\n    const { errorMessage } = this.props;\n\n    return (\n      <FormGroup row>\n        <Label for={field} md={2} className=\"text-capitalize\">\n          {label || field}\n        </Label>\n        <Col md={10}>\n          <Input\n            {...attributes}\n            type={type}\n            name={field}\n            id={field}\n            value={this.state[field]}\n            invalid={isInvalid}\n            onChange={this.handleChangeInput}\n          />\n          {isInvalid && errorMessage && <FormFeedback>{errorMessage}</FormFeedback>}\n        </Col>\n      </FormGroup>\n    );\n  }\n\n  render() {\n    const { user, isNew, isError, errorMessage, errorField } = this.props;\n\n    if (this.state.isSubmitSuccess) {\n      return <Redirect to={'/users'} />;\n    }\n\n    return (\n      <Container>\n        <h1 className=\"sr-only\">\n          {isNew && 'Create new user'}\n          {!isNew && `Edit user: ${this.state.username}`}\n        </h1>\n        <Breadcrumb className={styles['bread-crumbs']}>\n          <BreadcrumbItem>\n            <RRNavLink to=\"/users/\">Users</RRNavLink>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>\n            {isNew && 'Create new user'}\n            {!isNew && this.state.username}\n          </BreadcrumbItem>\n        </Breadcrumb>\n\n        <div className={styles.content}>\n          <Form onSubmit={this.handleSubmitForm}>\n            {isNew && (\n              <FormItem\n                value={this.state.username}\n                field=\"username\"\n                isInvalid={isError && errorField === 'username'}\n                errorMessage={errorMessage}\n                handleOnChange={this.handleChangeInput}\n              />\n            )}\n\n            <FormItem\n              type=\"password\"\n              value={this.state.password}\n              field=\"password\"\n              isInvalid={isError && errorField === 'password'}\n              errorMessage={errorMessage}\n              handleOnChange={this.handleChangeInput}\n            />\n\n            <FormItem\n              value={this.state.role}\n              field=\"role\"\n              type=\"select\"\n              isInvalid={isError && errorField === 'role'}\n              errorMessage={errorMessage}\n              handleOnChange={this.handleChangeInput}\n              options={[{ key: 'Admin' }, { key: 'Client' }]}\n            />\n\n            <FormItem\n              value={this.state.firstName}\n              field=\"firstName\"\n              label=\"First Name\"\n              isInvalid={isError && errorField === 'firstName'}\n              errorMessage={errorMessage}\n              handleOnChange={this.handleChangeInput}\n            />\n\n            <FormItem\n              value={this.state.lastName}\n              field=\"lastName\"\n              label=\"Last Name\"\n              isInvalid={isError && errorField === 'lastName'}\n              errorMessage={errorMessage}\n              handleOnChange={this.handleChangeInput}\n            />\n\n            <FormItem\n              value={this.state.sip}\n              field=\"sip\"\n              isInvalid={isError && errorField === 'sip'}\n              errorMessage={errorMessage}\n              handleOnChange={this.handleChangeInput}\n            />\n\n            {isNew && <Button>Create User</Button>}\n\n            {!isNew && (\n              <Button disabled={!user}>\n                Change &nbsp;\n                {(!user || user.isLoading) && <FontAwesomeIcon icon=\"circle-notch\" spin />}\n              </Button>\n            )}\n          </Form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst FormItem = ({\n  value,\n  label,\n  field,\n  type = 'text',\n  isInvalid = false,\n  errorMessage,\n  handleOnChange,\n  ...attributes\n}) => {\n  const { options, ...rest } = attributes;\n  let Options = null;\n\n  if (options) {\n    Options = options.map(el => (\n      <option key={el.key} value={el.key}>\n        {el.label || el.key}\n      </option>\n    ));\n  }\n\n  return (\n    <FormGroup row>\n      <Label for={field} md={2} className=\"text-capitalize\">\n        {label || field}\n      </Label>\n      <Col md={10}>\n        <Input\n          {...rest}\n          type={type}\n          name={field}\n          id={field}\n          value={value}\n          invalid={isInvalid}\n          onChange={handleOnChange}\n        >\n          {Options}\n        </Input>\n        {isInvalid && errorMessage && <FormFeedback>{errorMessage}</FormFeedback>}\n      </Col>\n    </FormGroup>\n  );\n};\n\nfunction mapStateToProps(state, { match }) {\n  const username = match.params.id;\n  const isNew = username === 'register';\n\n  return {\n    user: !isNew ? getUserState(state, username) : null,\n    isNew: isNew,\n    isError: getUserIsErrorState(state),\n    errorMessage: getUserIsErrorMsgState(state),\n    errorField: getUserErrorFieldState(state),\n    isSubmitSuccess: getUserIsSubmittedState(state)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getUser, patchUser, postUser }\n)(User);\n","import React from 'react';\n\nconst NotFoundPage = () => {\n  return (\n    <div>\n      <h3>Page not found</h3>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport Providers from 'helpers/Provider';\nimport PrivateRoute from './routeHandlers/PrivateRoute';\nimport store from 'store';\n\nimport Content from './components/Content';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport PanelQueues from './components/PanelQueues';\nimport PanelUsers from './components/PanelUsers';\nimport User from './components/User';\n\nimport NotFoundPage from './routeHandlers/NotFoundPage';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'components/App/css/main.css';\n\n// if (process.env.NODE_ENV !== 'production') {\n//   const { whyDidYouUpdate } = require('why-did-you-update');\n// whyDidYouUpdate(React);\n// whyDidYouUpdate(React, { exclude: [/Duration Timer$/] });\n//   whyDidYouUpdate(React, { include: [/^PanelQueues/], exclude: [/^Connect/] });\n//   whyDidYouUpdate(React, { include: [/^QueueMembers/], exclude: [/^Connect/] });\n//   whyDidYouUpdate(React, { include: [/^QueueEntryContainer/]});\n//   whyDidYouUpdate(React, { include: [/^QueueEntries/], exclude: [/^Connect/] });\n// }\n\n// v4\nexport default (\n  <Providers store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n\n        <Content>\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n\n            <PrivateRoute path=\"/queues\" component={PanelQueues} />\n\n            <PrivateRoute exact path=\"/users\" component={PanelUsers} />\n            <PrivateRoute path=\"/users/:id\" component={User} />\n          </Switch>\n        </Content>\n\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </BrowserRouter>\n  </Providers>\n);\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faCircleNotch,\n  faUserSecret,\n  faMicrophone,\n  faPhoneVolume,\n  faPhone\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faCircleNotch);\nlibrary.add(faUserSecret);\nlibrary.add(faMicrophone);\nlibrary.add(faPhoneVolume);\nlibrary.add(faPhone);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport routes from './routes';\nimport 'addFontAwesome';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst rootEl = document.getElementById('root');\nReactDOM.render(routes, rootEl);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.unregister();\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept();\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"QueueEntriy_content__vhRX3\",\"entries--empty\":\"QueueEntriy_entries--empty__n_Geu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"QueueComponent_title__6UfJ4\",\"entries__divider\":\"QueueComponent_entries__divider__1vuGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PanelUsers_content__3ex8d\",\"toolbar__link\":\"PanelUsers_toolbar__link__2A4Sm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bread-crumbs\":\"User_bread-crumbs__20ZwB\",\"content\":\"User_content__2BDrO\"};"],"sourceRoot":""}